# -*- coding: utf-8 -*-
"""Stock price prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11_SCYsmaGIf5EIEcFooUxKGJHp6KW1Is
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

!pip install yfinance
import yfinance as yf

data = yf.download("TATACONSUM.NS", start="2023-01-01", end="2023-12-31", group_by='column')
print(data.head(10))

print(type(data))

print(data.columns)

plt.figure(figsize=(16,8))
plt.plot(data['Close'], label='Close Price')

data['Open-Close'] = data['Open'] - data['Close']
data['High-Low'] = data['High'] - data['Low']
data['SMA_5'] = data['Close'].rolling(window=5).mean()
data['SMA_10'] = data['Close'].rolling(window=10).mean()
data['Price_Change'] = data['Close'].pct_change()

data.dropna(inplace = True)

data['Target'] = np.where(data['Close'].shift(-1) > data['Close'], 1, -1)

X = data[['Open-Close', 'High-Low', 'SMA_5', 'SMA_10', 'Price_Change']]
Y = data['Target']
X.head()



Y

from sklearn.model_selection import train_test_split
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.25,random_state=44)

from sklearn.neighbors import KNeighborsClassifier
from sklearn import neighbors
from sklearn.model_selection import GridSearchCV
from sklearn.metrics import accuracy_score

paramtr ={'n_neighbors': [2,3,4,5,6,7,8,9,10,11,12,13,14,15]}
knn =neighbors.KNeighborsClassifier()
model=GridSearchCV(knn,paramtr,cv=5)
model.fit(X_train,Y_train)

accuracy_train =accuracy_score(Y_train,model.predict(X_train))
accuracy_test =accuracy_score(Y_test,model.predict(X_test))
print('Train data accuracy:%.2f' %accuracy_train)
print('Test data accuracy: %.2f' %accuracy_test)

prediction_class =model.predict(X_test)

actual_prediction =pd.DataFrame({'Actual':Y_test.ravel(),'Prediction':prediction_class.ravel()})

actual_prediction.head(10)

y=data['Close']

y





